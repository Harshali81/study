//Addition of vector
#include <iostream> 
#include <vector> 
#include <cstdlib>  // For rand() 
#include <omp.h> 
 
using namespace std; 
 
int main() { 
    int n; 
    cout << "Enter the size of the vectors: "; 
    cin >> n; 
 
    // Initialize two vectors A and B with user input 
    vector<int> A(n), B(n), C(n); 
 
    // Get input from the user for vectors A and B 
    cout << "Enter elements for vector A:\n"; 
    for (int i = 0; i < n; i++) { 
        cout << "A[" << i << "] = "; 
        cin >> A[i]; 
    } 
 
    cout << "Enter elements for vector B:\n"; 
    for (int i = 0; i < n; i++) { 
        cout << "B[" << i << "] = "; 
        cin >> B[i]; 
    } 
 
    // Perform vector addition in parallel 
    #pragma omp parallel for 
    for (int i = 0; i < n; i++) { 
        C[i] = A[i] + B[i]; 
    } 
 
    // Display the result (optional: displaying only first 10 elements if large) 
    cout << "\nFirst 10 elements of the result vector C:\n"; 
    for (int i = 0; i < 10 && i < n; i++) { 
        cout << "C[" << i << "] = " << C[i] << endl; 
    } 
 
    return 0; 
} 

//matrix multiplication
#include <iostream> 
#include <omp.h> 
using namespace std; 
int main() 
{ 
    int n; 
    cout << "\nName: Harshali Madake\nRoll No.28 \t Div.B\n"; 
    cout << "\nEnter the size of the square matrices (e.g. 3 for 3x3): "; 
    cin >> n; 
    float A[n][n], B[n][n], C[n][n]; 
    cout << "\nEnter elements of Matrix A:\n"; 
    for (int i = 0; i < n; i++) 
        for (int j = 0; j < n; j++) 
            cin >> A[i][j]; 
    cout << "\nEnter elements of Matrix B:\n"; 
    for (int i = 0; i < n; i++) 
        for (int j = 0; j < n; j++) 
            cin >> B[i][j]; 
#pragma omp parallel for collapse(2) 
    for (int i = 0; i < n; i++) 
        for (int j = 0; j < n; j++) 
            C[i][j] = 0; 
    double start = omp_get_wtime(); 
#pragma omp parallel for collapse(2) 
    for (int i = 0; i < n; i++) 
        for (int j = 0; j < n; j++) 
            for (int k = 0; k < n; k++) 
                C[i][j] += A[i][k] * B[k][j]; 
    double end = omp_get_wtime(); 
    cout << "\nResultant Matrix C = A x B:\n"; 
    for (int i = 0; i < n; i++) 
    { 
        for (int j = 0; j < n; j++) 
            cout << C[i][j] << "\t"; 
        cout << endl; 
    } 
    cout << "\n Matrix multiplication done using OpenMP."; 
    cout << "\n Time taken: " << end - start << " seconds\n"; 
    return 0; 
} 
